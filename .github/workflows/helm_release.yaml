name: Publish Helm Charts
on:
  push:
    branches:
      - main
    paths:
      - 'misc/helm-charts/**'
permissions:
  contents: write
env:
  CHARTS_DIR: misc/helm-charts
  GITHUB_PAGES_BRANCH: gh-pages
  RELEASE_DIR: .cr-release-packages
jobs:
  publish:
    name: Package and Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3.5
        with:
          version: latest

      - name: Get list of charts
        id: chart-list
        run: |
          CHARTS=$(ls -d ${CHARTS_DIR}/*/ | xargs -n 1 basename)
          echo "charts=${CHARTS}" >> $GITHUB_OUTPUT
          echo "Found charts: ${CHARTS}"

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.GITHUB_PAGES_BRANCH }}
          path: gh-pages
          clean: true

      - name: Process charts
        run: |
          mkdir -p ${RELEASE_DIR}

          for CHART in ${{ steps.chart-list.outputs.charts }}; do
            CHART_PATH="${CHARTS_DIR}/${CHART}"
            VERSION=$(yq eval '.version' ${CHART_PATH}/Chart.yaml)
            echo "Processing chart: ${CHART} version: ${VERSION}"

            # Check if version already exists
            if [ -f "gh-pages/${CHART}-${VERSION}.tgz" ]; then
              echo "Chart ${CHART} version ${VERSION} already exists, skipping"
              continue
            fi

            # Lint chart
            helm lint "${CHART_PATH}"

            # Package chart
            helm package "${CHART_PATH}" --destination ${RELEASE_DIR}
          done

          # Copy new charts to gh-pages
          cp ${RELEASE_DIR}/*.tgz gh-pages/ || true

          # Update the repository index
          cd gh-pages
          REPO_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          if [ -f index.yaml ]; then
            helm repo index . --url "${REPO_URL}" --merge index.yaml
          else
            helm repo index . --url "${REPO_URL}"
          fi

          # Check if there are changes to commit
          if [ -n "$(git status --porcelain)" ]; then
            # Configure git
            git config user.name "${{ github.actor }}"
            git config user.email "${{ github.actor }}@users.noreply.github.com"

            # Commit and push changes
            git add .
            git commit -m "helm-charts: publish updated charts"
            git push origin ${{ env.GITHUB_PAGES_BRANCH }}
          else
            echo "No changes to commit"
          fi

      - name: Handle failure
        if: failure()
        run: |
          echo "::error::Failed to publish Helm charts"
          exit 1
