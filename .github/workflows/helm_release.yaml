# Helm Chart Publishing Workflow
# - Packages charts and pushes to the gh-pages branch
# - Updates Helm repository index
# - Skips if version already exists

name: Publish Helm Charts

on:
  push:
    branches:
      - main
    paths:
      - 'charts/test-chart/Chart.yaml'
      - 'charts/test-chart/values.yaml'
      - 'charts/test-chart/templates/**'

jobs:
  publish:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Get Chart Version
        id: chart-version
        run: |
          VERSION=$(awk '/^version:/ {print $2}' charts/test-chart/Chart.yaml)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Checkout gh-pages
        uses: actions/checkout@v3
        with:
          ref: gh-pages
          path: gh-pages

      - name: Check if version exists
        id: check-version
        run: |
          if [ -f "gh-pages/test-chart-${{ steps.chart-version.outputs.version }}.tgz" ]; then
            echo "Chart version ${{ steps.chart-version.outputs.version }} already exists, skipping"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Package and Push Chart
        if: steps.check-version.outputs.exists == 'false'
        run: |
          # Package the chart
          mkdir -p .cr-release-packages
          helm package charts/test-chart/ -d .cr-release-packages/

          # Copy new chart package
          cp .cr-release-packages/*.tgz gh-pages/

          # Generate or update index
          cd gh-pages
          if [ -f index.yaml ]; then
            helm repo index . --url https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }} --merge index.yaml
          else
            helm repo index . --url https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
          fi

          # Configure git
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

          # Commit and push changes
          git add .
          git commit -m "Add chart version ${{ steps.chart-version.outputs.version }}" || echo "No changes to commit, version already exists"
          git push
