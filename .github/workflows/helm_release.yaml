name: Publish Helm Charts

on:
  push:
    branches:
      - main
    paths:
      - 'charts/test-chart/**'

permissions:
  contents: write

env:
  CHART_DIR: charts/test-chart
  GITHUB_PAGES_BRANCH: gh-pages
  RELEASE_DIR: .cr-release-packages

jobs:
  publish:
    name: Package and Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3.5
        with:
          version: latest

      - name: Extract chart version
        id: chart-version
        run: |
          VERSION=$(yq eval '.version' ${CHART_DIR}/Chart.yaml)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Chart version: ${VERSION}"

      - name: Lint Helm chart
        run: |
          helm lint ${CHART_DIR}

      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.GITHUB_PAGES_BRANCH }}
          path: gh-pages
          clean: true

      - name: Check existing version
        id: version-check
        run: |
          if [ -f "gh-pages/${CHART_DIR##*/}-${{ steps.chart-version.outputs.version }}.tgz" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Chart version ${{ steps.chart-version.outputs.version }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Chart version ${{ steps.chart-version.outputs.version }} is new"
          fi

      - name: Package and publish chart
        if: steps.version-check.outputs.exists == 'false'
        run: |
          # Package the chart
          mkdir -p ${RELEASE_DIR}
          helm package ${CHART_DIR} --destination ${RELEASE_DIR}

          # Copy new chart to gh-pages
          cp ${RELEASE_DIR}/*.tgz gh-pages/

          # Update the repository index
          cd gh-pages
          REPO_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          if [ -f index.yaml ]; then
            helm repo index . --url "${REPO_URL}" --merge index.yaml
          else
            helm repo index . --url "${REPO_URL}"
          fi

          # Configure git
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          # Commit and push changes
          git add .
          git commit -m "helm-chart: publish helm chart version ${{ steps.chart-version.outputs.version }}"
          git push origin ${{ env.GITHUB_PAGES_BRANCH }}

      - name: Handle failure
        if: failure()
        run: |
          echo "::error::Failed to publish Helm chart"
          exit 1
